"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""

num = 4000000

# Find all the Fibonacci numbers below a specified value
def find_fibs_below(num):
    fibs = [1, 2]
    s = fibs[-1] + fibs[-2]
    while s < num:
        fibs.append(s)
        s = fibs[-1] + fibs[-2]
    return fibs

# Find and return a list of all even numbers from a specific list of integers
def find_evens(nums):
    evens = []
    for n in nums:
        if n % 2 == 0:
            evens.append(n)
    return evens


fibs = find_fibs_below(num)
even_fibs = find_evens(fibs)

answer = sum(even_fibs)

print(answer)